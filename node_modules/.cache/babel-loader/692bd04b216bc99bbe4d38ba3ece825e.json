{"ast":null,"code":"import { sequenceBooleanResponse, sequenceNumberResponse } from \"./auxFuncs\";\nimport { Column, Title } from \"./auxClasses\";\nexport const exerciseOne = [new Column(\"i\", sequenceNumberResponse(0, 5)), new Column(\"console\", sequenceNumberResponse(0, 5)), new Column(\"i < 5\", sequenceBooleanResponse(6))];\nexport const exerciseOneTitle = new Title(\"for (let i = 0; i < 5; i++) {\\n\" + \"      console.log(i)\\n\" + \"}\", 1);\nexport const exerciseTwo = [new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"i > 0\", sequenceBooleanResponse(6))];\nexport const exerciseTwoTitle = new Title(\"for (let i = 5; i > 0; i--) {\\n\" + \"      console.log(i)\\n\" + \"}\", 2);\nexport const exerciseThree = [new Column(\"counter\", sequenceNumberResponse(2, 12, 2)), new Column(\"counter <= 10\", sequenceBooleanResponse(6)), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 6\n}, {\n  response: 12\n}, {\n  response: 20\n}, {\n  response: 30\n}, {\n  response: 30\n}])];\nexport const exerciseThreeTitle = new Title(\"let output = 0\\n\" + \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" + \"      output += counter\\n\" + \"}\\n\" + \"console.log(output)\", 3);\nexport const exerciseFour = [new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)), new Column(\"index > 19 \", sequenceBooleanResponse(7)), new Column(\"response\", [{\n  response: 60\n}, {\n  response: 113\n}, {\n  response: 159\n}, {\n  response: 198\n}, {\n  response: 230\n}, {\n  response: 255\n}, {\n  response: 255\n}])];\nexport const exerciseFourTitle = new Title(\"let response = 0\\n\" + \"for (let index = 60; index > 19; index -= 7) {\\n\" + \"      response += index\\n\" + \"}\\n\" + \"console.log(response)\", 4);\nexport const exerciseFive = [new Column(\"churros\", sequenceNumberResponse(1, 7)), new Column(\"console\", [{\n  response: \"nda\"\n}, {\n  response: 2\n}, {\n  response: \"nda\"\n}, {\n  response: 4\n}, {\n  response: \"nda\"\n}, {\n  response: 6\n}, {\n  response: \"nda\"\n}]), new Column(\"churros < 7\", sequenceBooleanResponse(7))];\nexport const exerciseFiveTitle = new Title(\"for (let churros = 1; churros < 7; churros++) {\\n\" + \"    if (churros % 2 === 0)\\n\" + \"        console.log(churros)\\n\" + \"    }\\n\" + \"}\\n\", 5);\nexport const exerciseSix = [new Column(\"i\", sequenceNumberResponse(0, 8)), new Column(\"i < 8\", sequenceBooleanResponse(9)), new Column(\"i % 2 === 0\", [{\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}]), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 5\n}, {\n  response: 6\n}, {\n  response: 8\n}, {\n  response: 9\n}, {\n  response: 11\n}, {\n  response: 12\n}, {\n  response: 12\n}])];\nexport const exerciseSixTitle = new Title(\"let output = 0\\n\" + \"for (let i = 0; i < 8; i++) {\\n\" + \"    if (i % 2 === 0)\\n\" + \"        output += 2\\n\" + \"    } else {\\n\" + \"        output += 1\\n\" + \"    }\\n\" + \"}\\n\" + \"console.log(output)\", 6);\nexport const exerciseSeven = [new Column(\"i\", sequenceNumberResponse(0, 4)), new Column(\"i <= arr.length\", sequenceBooleanResponse(5)), new Column(\"arr[i]\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: -98311\n}, {\n  response: \"undefined\"\n}, {\n  response: \"undefined\"\n}]), new Column(\"number\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: -98311\n}, {\n  response: \"undefined\"\n}, {\n  response: \"undefined\"\n}]), new Column(\"output\", [{\n  response: 10\n}, {\n  response: 15\n}, {\n  response: -98296\n}, {\n  response: \"NaN\"\n}, {\n  response: \"NaN\"\n}])];\nexport const exerciseSevenTitle = new Title(\"let output = 0\\n\" + \"let arr = [10, 5, -98311]\\n\" + \"for (let i = 0; i <= arr.length; i++) {\\n\" + \"    let number = arr[i]\\n\" + \"    output += number\\n\" + \"}\\n\" + \"console.log(output)\", 7);","map":{"version":3,"sources":["/home/howard/personal/teste-de-mesa/src/exercises/columns/columns.js"],"names":["sequenceBooleanResponse","sequenceNumberResponse","Column","Title","exerciseOne","exerciseOneTitle","exerciseTwo","exerciseTwoTitle","exerciseThree","response","exerciseThreeTitle","exerciseFour","exerciseFourTitle","exerciseFive","exerciseFiveTitle","exerciseSix","exerciseSixTitle","exerciseSeven","exerciseSevenTitle"],"mappings":"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","sourcesContent":["import { sequenceBooleanResponse, sequenceNumberResponse } from \"./auxFuncs\";\nimport { Column, Title } from \"./auxClasses\";\n\nexport const exerciseOne = [\n    new Column(\"i\", sequenceNumberResponse(0, 5)),\n    new Column(\"console\", sequenceNumberResponse(0, 5)),\n    new Column(\"i < 5\", sequenceBooleanResponse(6)),\n]\nexport const exerciseOneTitle = new Title (\n    \"for (let i = 0; i < 5; i++) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 1\n)\n\nexport const exerciseTwo = [\n    new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"i > 0\", sequenceBooleanResponse(6))\n]\nexport const exerciseTwoTitle = new Title (\n    \"for (let i = 5; i > 0; i--) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 2\n)\n\nexport const exerciseThree = [\n    new Column(\"counter\", sequenceNumberResponse(2, 12, 2)),\n    new Column (\"counter <= 10\",sequenceBooleanResponse(6)),\n    new Column (\"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 6\n            },\n            {\n                response: 12\n            },\n            {\n                response: 20\n            },\n            {\n                response: 30\n            },\n            {\n                response: 30\n            },\n        ]\n    )\n]\nexport const exerciseThreeTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" +\n    \"      output += counter\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\"\n    , 3\n)\n\nexport const exerciseFour = [\n    new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)),\n    new Column(\"index > 19 \", sequenceBooleanResponse(7)),\n    new Column(\n        \"response\",\n        [\n            {\n                response: 60\n            },\n            {\n                response: 113\n            },\n            {\n                response: 159\n            },\n            {\n                response: 198\n            },\n            {\n                response: 230\n            },\n            {\n                response: 255\n            },\n            {\n                response: 255\n            },\n        ]\n    )\n]\nexport const exerciseFourTitle = new Title (\n    \"let response = 0\\n\" +\n    \"for (let index = 60; index > 19; index -= 7) {\\n\" +\n    \"      response += index\\n\" +\n    \"}\\n\" +\n    \"console.log(response)\", 4\n)\n\nexport const exerciseFive = [\n    new Column(\"churros\", sequenceNumberResponse(1, 7)),\n    new Column(\n        \"console\",\n        [\n            {\n                response: \"nda\"\n            },\n            {\n                response: 2\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 4\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 6\n            },\n            {\n                response: \"nda\"\n            },\n        ]\n    ),\n    new Column(\"churros < 7\", sequenceBooleanResponse(7))\n]\nexport const exerciseFiveTitle = new Title (\n    \"for (let churros = 1; churros < 7; churros++) {\\n\" +\n    \"    if (churros % 2 === 0)\\n\" +\n    \"        console.log(churros)\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" , 5\n)\n\nexport const exerciseSix = [\n    new Column (\"i\", sequenceNumberResponse(0, 8)),\n    new Column(\"i < 8\", sequenceBooleanResponse(9)),\n    new Column(\n        \"i % 2 === 0\",\n        [\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 3\n            },\n            {\n                response: 5\n            },\n            {\n                response: 6\n            },\n            {\n                response: 8\n            },\n            {\n                response: 9\n            },\n            {\n                response: 11\n            },\n            {\n                response: 12\n            },\n            {\n                response: 12\n            },\n        ]\n    )\n]\nexport const exerciseSixTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let i = 0; i < 8; i++) {\\n\" +\n    \"    if (i % 2 === 0)\\n\" +\n    \"        output += 2\\n\" +\n    \"    } else {\\n\" +\n    \"        output += 1\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\", 6\n)\n\nexport const exerciseSeven = [\n    new Column(\"i\", sequenceNumberResponse(0, 4)),\n    new Column(\"i <= arr.length\", sequenceBooleanResponse(5)),\n    new Column(\n        \"arr[i]\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: -98311\n            },\n            {\n                response: \"undefined\"\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"number\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: -98311\n            },\n            {\n                response: \"undefined\"\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 15\n            },\n            {\n                response: -98296\n            },\n            {\n                response: \"NaN\"\n            },\n            {\n                response: \"NaN\"\n            }\n        ]\n    )\n]\n\nexport const exerciseSevenTitle = new Title (\n    \"let output = 0\\n\" +\n    \"let arr = [10, 5, -98311]\\n\" +\n    \"for (let i = 0; i <= arr.length; i++) {\\n\" +\n    \"    let number = arr[i]\\n\" +\n    \"    output += number\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\", 7\n)\n"]},"metadata":{},"sourceType":"module"}