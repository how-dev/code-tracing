{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/howard/personal/teste-de-mesa/src/components/loop1/table/table.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Inputs from \"./inputs\";\nimport \"../style.css\";\nimport { fases } from \"../../../data/fases\";\n\nconst Table = props => {\n  _s();\n\n  const [variaveis] = useState(props.variaveis);\n  const [vezes] = useState(props.vezes);\n  const [aparece] = useState(props.aparece);\n\n  const campo = (input, condition, answer) => {\n    const res = input.target.value;\n\n    if (input.target.placeholder === condition) {\n      if (res === answer.toString()) {\n        input.target.className = \"inputsCerto\";\n      } else {\n        input.target.className = \"inputs\";\n      }\n    }\n  };\n\n  const verifica = input => {\n    const fase = fases[0][1];\n    const key = input.target.name;\n    const res_i = fase.res_i;\n    const res_console = fase.res_console;\n    const res_condition = fase.res_condition;\n    campo(input, res_i.condition, res_i.res[key]);\n    campo(input, res_console.condition, res_console.res[key]);\n    campo(input, res_condition.condition, res_condition.res[key]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [variaveis.map((elt, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"topo\",\n      children: [elt, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), vezes.map((_elt, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mesa\",\n      children: [aparece && index + 1 + \"° volta: \", /*#__PURE__*/_jsxDEV(Inputs, {\n        Key: index,\n        inputs: variaveis,\n        className: `inputs`,\n        onChange: e => verifica(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"ZXt3vjzF2HELYGV5B2v7DnLHvKQ=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/howard/personal/teste-de-mesa/src/components/loop1/table/table.js"],"names":["useState","Inputs","fases","Table","props","variaveis","vezes","aparece","campo","input","condition","answer","res","target","value","placeholder","toString","className","verifica","fase","key","name","res_i","res_console","res_condition","map","elt","index","_elt","e"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,SAAD,IAAcL,QAAQ,CAACI,KAAK,CAACC,SAAP,CAA5B;AACA,QAAM,CAACC,KAAD,IAAUN,QAAQ,CAACI,KAAK,CAACE,KAAP,CAAxB;AACA,QAAM,CAACC,OAAD,IAAYP,QAAQ,CAACI,KAAK,CAACG,OAAP,CAA1B;;AAEA,QAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,SAAR,EAAmBC,MAAnB,KAA8B;AAC1C,UAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAzB;;AAEA,QAAIL,KAAK,CAACI,MAAN,CAAaE,WAAb,KAA6BL,SAAjC,EAA4C;AAC1C,UAAIE,GAAG,KAAKD,MAAM,CAACK,QAAP,EAAZ,EAA+B;AAC7BP,QAAAA,KAAK,CAACI,MAAN,CAAaI,SAAb,GAAyB,aAAzB;AACD,OAFD,MAEO;AACLR,QAAAA,KAAK,CAACI,MAAN,CAAaI,SAAb,GAAyB,QAAzB;AACD;AACF;AACF,GAVD;;AAYA,QAAMC,QAAQ,GAAIT,KAAD,IAAW;AAC1B,UAAMU,IAAI,GAAGjB,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAb;AACA,UAAMkB,GAAG,GAAGX,KAAK,CAACI,MAAN,CAAaQ,IAAzB;AACA,UAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;AACA,UAAMC,WAAW,GAAGJ,IAAI,CAACI,WAAzB;AACA,UAAMC,aAAa,GAAGL,IAAI,CAACK,aAA3B;AACAhB,IAAAA,KAAK,CAACC,KAAD,EAAQa,KAAK,CAACZ,SAAd,EAAyBY,KAAK,CAACV,GAAN,CAAUQ,GAAV,CAAzB,CAAL;AACAZ,IAAAA,KAAK,CAACC,KAAD,EAAQc,WAAW,CAACb,SAApB,EAA+Ba,WAAW,CAACX,GAAZ,CAAgBQ,GAAhB,CAA/B,CAAL;AACAZ,IAAAA,KAAK,CAACC,KAAD,EAAQe,aAAa,CAACd,SAAtB,EAAiCc,aAAa,CAACZ,GAAd,CAAkBQ,GAAlB,CAAjC,CAAL;AACD,GATD;;AAUA,sBACE;AAAA,eACGf,SAAS,CAACoB,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBACb;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAA,iBACGD,GADH,EACQ,GADR;AAAA,OAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAME;AAAA;AAAA;AAAA;AAAA,YANF,EAOGrB,KAAK,CAACmB,GAAN,CAAU,CAACG,IAAD,EAAOD,KAAP,kBACT;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAA,iBACGpB,OAAO,IAAIoB,KAAK,GAAG,CAAR,GAAY,WAD1B,eAEE,QAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,MAAM,EAAEtB,SAFV;AAGE,QAAA,SAAS,EAAG,QAHd;AAIE,QAAA,QAAQ,EAAGwB,CAAD,IAAOX,QAAQ,CAACW,CAAD;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAWF,KAAX;AAAA;AAAA;AAAA;AAAA,YADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAhDD;;GAAMxB,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport Inputs from \"./inputs\";\nimport \"../style.css\";\nimport { fases } from \"../../../data/fases\";\n\nconst Table = (props) => {\n  const [variaveis] = useState(props.variaveis);\n  const [vezes] = useState(props.vezes);\n  const [aparece] = useState(props.aparece);\n\n  const campo = (input, condition, answer) => {\n    const res = input.target.value;\n\n    if (input.target.placeholder === condition) {\n      if (res === answer.toString()) {\n        input.target.className = \"inputsCerto\";\n      } else {\n        input.target.className = \"inputs\";\n      }\n    }\n  };\n\n  const verifica = (input) => {\n    const fase = fases[0][1];\n    const key = input.target.name;\n    const res_i = fase.res_i;\n    const res_console = fase.res_console;\n    const res_condition = fase.res_condition;\n    campo(input, res_i.condition, res_i.res[key]);\n    campo(input, res_console.condition, res_console.res[key]);\n    campo(input, res_condition.condition, res_condition.res[key]);\n  };\n  return (\n    <div>\n      {variaveis.map((elt, index) => (\n        <span key={index} className=\"topo\">\n          {elt}{\" \"}\n        </span>\n      ))}\n      <br />\n      {vezes.map((_elt, index) => (\n        <span key={index} className=\"mesa\">\n          {aparece && index + 1 + \"° volta: \"}\n          <Inputs\n            Key={index}\n            inputs={variaveis}\n            className={`inputs`}\n            onChange={(e) => verifica(e)}\n          />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}