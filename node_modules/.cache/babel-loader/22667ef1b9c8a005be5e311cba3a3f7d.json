{"ast":null,"code":"class Column {\n  constructor(title, fields) {\n    this.title = title;\n    this.fields = fields;\n  }\n\n}\n\nclass Title {\n  constructor(code, number) {\n    this.code = code;\n    this.number = number;\n  }\n\n}\n\nconst sequenceNumberResponse = (start, end, inc = 1, isDecreasing = false) => {\n  let output = [];\n\n  if (!isDecreasing) {\n    for (let i = start; i <= end; i += inc) {\n      output.push({\n        response: i\n      });\n    }\n\n    return output;\n  }\n\n  for (let i = start; i >= end; i -= inc) {\n    output.push({\n      response: i\n    });\n  }\n\n  return output;\n};\n\nconst sequenceBooleanResponse = n => {\n  let output = [{\n    response: false\n  }];\n\n  for (let i = 0; i < n - 1; i++) {\n    output.unshift({\n      response: true\n    });\n  }\n\n  return output;\n};\n\nexport const exerciseOne = [new Column(\"i\", sequenceNumberResponse(0, 5)), new Column(\"console\", sequenceNumberResponse(0, 5)), new Column(\"i < 5\", sequenceBooleanResponse(6))];\nexport const exerciseOneTitle = new Title(\"for (let i = 0; i < 5; i++) {\\n\" + \"      console.log(i)\\n\" + \"}\", 1);\nexport const exerciseTwo = [new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"i > 0\", sequenceBooleanResponse(6))];\nexport const exerciseTwoTitle = new Title(\"for (let i = 5; i > 0; i--) {\\n\" + \"      console.log(i)\\n\" + \"}\", 2);\nexport const exerciseThree = [new Column(\"counter\", sequenceNumberResponse(2, 12, 2)), new Column(\"counter <= 10\", sequenceBooleanResponse(6)), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 6\n}, {\n  response: 12\n}, {\n  response: 20\n}, {\n  response: 30\n}, {\n  response: 30\n}])];\nexport const exerciseThreeTitle = new Title(\"let output = 0\\n\" + \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" + \"      output += counter\\n\" + \"}\\n\" + \"console.log(output)\", 3);\nexport const exerciseFour = [new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)), new Column(\"index > 19 \", sequenceBooleanResponse(7)), new Column(\"response\", [{\n  response: 60\n}, {\n  response: 113\n}, {\n  response: 159\n}, {\n  response: 198\n}, {\n  response: 230\n}, {\n  response: 255\n}, {\n  response: 255\n}])];\nexport const exerciseFourTitle = new Title(\"let response = 0\\n\" + \"for (let index = 60; index > 19; index -= 7) {\\n\" + \"      response += index\\n\" + \"}\\n\" + \"console.log(response)\", 4);\nexport const exerciseFive = [new Column(\"churros\", sequenceNumberResponse(1, 7)), new Column(\"console\", [{\n  response: \"nda\"\n}, {\n  response: 2\n}, {\n  response: \"nda\"\n}, {\n  response: 4\n}, {\n  response: \"nda\"\n}, {\n  response: 6\n}, {\n  response: \"nda\"\n}]), new Column(\"churros < 7\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}])];\nexport const exerciseFiveTitle = new Title(\"for (let churros = 1; churros < 7; churros++) {\\n\" + \"    if (churros % 2 === 0)\\n\" + \"        console.log(churros)\\n\" + \"    }\\n\" + \"}\\n\", 5);\nexport const exerciseSix = [new Column(\"i\", sequenceNumberResponse(0, 8)), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 5\n}, {\n  response: 6\n}, {\n  response: 8\n}, {\n  response: 9\n}, {\n  response: 11\n}, {\n  response: 12\n}, {\n  response: 12\n}]), new Column(\"i < 8\")];","map":{"version":3,"sources":["/home/howard/personal/teste-de-mesa/src/exercises/columns/columns.js"],"names":["Column","constructor","title","fields","Title","code","number","sequenceNumberResponse","start","end","inc","isDecreasing","output","i","push","response","sequenceBooleanResponse","n","unshift","exerciseOne","exerciseOneTitle","exerciseTwo","exerciseTwoTitle","exerciseThree","exerciseThreeTitle","exerciseFour","exerciseFourTitle","exerciseFive","exerciseFiveTitle","exerciseSix"],"mappings":"AAAA,MAAMA,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAJQ;;AAMb,MAAMC,KAAN,CAAY;AACRH,EAAAA,WAAW,CAACI,IAAD,EAAOC,MAAP,EAAe;AACtB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAJO;;AAOZ,MAAMC,sBAAsB,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAG,GAAC,CAAjB,EAAoBC,YAAY,GAAC,KAAjC,KAA2C;AACtE,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,CAACD,YAAL,EAAmB;AACf,SAAK,IAAIE,CAAC,GAAGL,KAAb,EAAoBK,CAAC,IAAIJ,GAAzB,EAA8BI,CAAC,IAAIH,GAAnC,EAAwC;AACpCE,MAAAA,MAAM,CAACE,IAAP,CAAY;AAAEC,QAAAA,QAAQ,EAAEF;AAAZ,OAAZ;AACH;;AACD,WAAOD,MAAP;AACH;;AACD,OAAK,IAAIC,CAAC,GAAGL,KAAb,EAAoBK,CAAC,IAAIJ,GAAzB,EAA8BI,CAAC,IAAIH,GAAnC,EAAwC;AACpCE,IAAAA,MAAM,CAACE,IAAP,CAAY;AAAEC,MAAAA,QAAQ,EAAEF;AAAZ,KAAZ;AACH;;AACD,SAAOD,MAAP;AACH,CAZD;;AAcA,MAAMI,uBAAuB,GAAGC,CAAC,IAAI;AACjC,MAAIL,MAAM,GAAG,CAAC;AAAEG,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAb;;AACA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,CAAC,GAAG,CAAxB,EAA2BJ,CAAC,EAA5B,EAAgC;AAC5BD,IAAAA,MAAM,CAACM,OAAP,CAAe;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAf;AACH;;AACD,SAAOH,MAAP;AACH,CAND;;AAQA,OAAO,MAAMO,WAAW,GAAG,CACvB,IAAInB,MAAJ,CAAW,GAAX,EAAgBO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,CAAtC,CADuB,EAEvB,IAAIP,MAAJ,CAAW,SAAX,EAAsBO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,CAA5C,CAFuB,EAGvB,IAAIP,MAAJ,CAAW,OAAX,EAAoBgB,uBAAuB,CAAC,CAAD,CAA3C,CAHuB,CAApB;AAKP,OAAO,MAAMI,gBAAgB,GAAG,IAAIhB,KAAJ,CAC5B,oCACA,wBADA,GAEA,GAH4B,EAGvB,CAHuB,CAAzB;AAMP,OAAO,MAAMiB,WAAW,GAAG,CACvB,IAAIrB,MAAJ,CAAW,GAAX,EAAgBO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,IAAV,CAAtC,CADuB,EAEvB,IAAIP,MAAJ,CAAW,SAAX,EAAsBO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,IAAV,CAA5C,CAFuB,EAGvB,IAAIP,MAAJ,CAAW,OAAX,EAAoBgB,uBAAuB,CAAC,CAAD,CAA3C,CAHuB,CAApB;AAKP,OAAO,MAAMM,gBAAgB,GAAG,IAAIlB,KAAJ,CAC5B,oCACA,wBADA,GAEA,GAH4B,EAGvB,CAHuB,CAAzB;AAMP,OAAO,MAAMmB,aAAa,GAAG,CACzB,IAAIvB,MAAJ,CAAW,SAAX,EAAsBO,sBAAsB,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAA5C,CADyB,EAEzB,IAAIP,MAAJ,CAAY,eAAZ,EAA4BgB,uBAAuB,CAAC,CAAD,CAAnD,CAFyB,EAGzB,IAAIhB,MAAJ,CAAY,QAAZ,EACI,CACI;AACIe,EAAAA,QAAQ,EAAE;AADd,CADJ,EAII;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJJ,EAOI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPJ,EAUI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVJ,EAaI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAbJ,EAgBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAhBJ,CADJ,CAHyB,CAAtB;AA0BP,OAAO,MAAMS,kBAAkB,GAAG,IAAIpB,KAAJ,CAC9B,qBACA,wDADA,GAEA,2BAFA,GAGA,KAHA,GAIA,qBAL8B,EAM5B,CAN4B,CAA3B;AASP,OAAO,MAAMqB,YAAY,GAAG,CACxB,IAAIzB,MAAJ,CAAW,OAAX,EAAoBO,sBAAsB,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,IAAZ,CAA1C,CADwB,EAExB,IAAIP,MAAJ,CAAW,aAAX,EAA0BgB,uBAAuB,CAAC,CAAD,CAAjD,CAFwB,EAGxB,IAAIhB,MAAJ,CACI,UADJ,EAEI,CACI;AACIe,EAAAA,QAAQ,EAAE;AADd,CADJ,EAII;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJJ,EAOI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPJ,EAUI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVJ,EAaI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAbJ,EAgBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAhBJ,EAmBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAnBJ,CAFJ,CAHwB,CAArB;AA8BP,OAAO,MAAMW,iBAAiB,GAAG,IAAItB,KAAJ,CAC7B,uBACA,kDADA,GAEA,2BAFA,GAGA,KAHA,GAIA,uBAL6B,EAKJ,CALI,CAA1B;AAQP,OAAO,MAAMuB,YAAY,GAAG,CACxB,IAAI3B,MAAJ,CACI,SADJ,EAEIO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,CAF1B,CADwB,EAKxB,IAAIP,MAAJ,CACI,SADJ,EAEI,CACI;AACIe,EAAAA,QAAQ,EAAE;AADd,CADJ,EAII;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJJ,EAOI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPJ,EAUI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVJ,EAaI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAbJ,EAgBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAhBJ,EAmBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAnBJ,CAFJ,CALwB,EA+BxB,IAAIf,MAAJ,CACI,aADJ,EAEI,CACI;AACIe,EAAAA,QAAQ,EAAE;AADd,CADJ,EAII;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJJ,EAOI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPJ,EAUI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVJ,EAaI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAbJ,EAgBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAhBJ,EAmBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAnBJ,CAFJ,CA/BwB,CAArB;AA0DP,OAAO,MAAMa,iBAAiB,GAAG,IAAIxB,KAAJ,CAC7B,sDACA,8BADA,GAEA,gCAFA,GAGA,SAHA,GAIA,KAL6B,EAKrB,CALqB,CAA1B;AAQP,OAAO,MAAMyB,WAAW,GAAG,CACvB,IAAI7B,MAAJ,CACI,GADJ,EAEIO,sBAAsB,CAAC,CAAD,EAAI,CAAJ,CAF1B,CADuB,EAKvB,IAAIP,MAAJ,CACI,QADJ,EAEI,CACI;AACIe,EAAAA,QAAQ,EAAE;AADd,CADJ,EAII;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJJ,EAOI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPJ,EAUI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVJ,EAaI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAbJ,EAgBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAhBJ,EAmBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAnBJ,EAsBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAtBJ,EAyBI;AACIA,EAAAA,QAAQ,EAAE;AADd,CAzBJ,CAFJ,CALuB,EAqCvB,IAAIf,MAAJ,CACI,OADJ,CArCuB,CAApB","sourcesContent":["class Column {\n    constructor(title, fields) {\n        this.title = title\n        this.fields = fields\n    }\n}\nclass Title {\n    constructor(code, number) {\n        this.code = code\n        this.number = number\n    }\n}\n\nconst sequenceNumberResponse = (start, end, inc=1, isDecreasing=false) => {\n    let output = []\n    if (!isDecreasing) {\n        for (let i = start; i <= end; i += inc) {\n            output.push({ response: i })\n        }\n        return output\n    }\n    for (let i = start; i >= end; i -= inc) {\n        output.push({ response: i })\n    }\n    return output\n}\n\nconst sequenceBooleanResponse = n => {\n    let output = [{ response: false }]\n    for (let i = 0; i < n - 1; i++) {\n        output.unshift({ response: true })\n    }\n    return output\n}\n\nexport const exerciseOne = [\n    new Column(\"i\", sequenceNumberResponse(0, 5)),\n    new Column(\"console\", sequenceNumberResponse(0, 5)),\n    new Column(\"i < 5\", sequenceBooleanResponse(6)),\n]\nexport const exerciseOneTitle = new Title (\n    \"for (let i = 0; i < 5; i++) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 1\n)\n\nexport const exerciseTwo = [\n    new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"i > 0\", sequenceBooleanResponse(6))\n]\nexport const exerciseTwoTitle = new Title (\n    \"for (let i = 5; i > 0; i--) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 2\n)\n\nexport const exerciseThree = [\n    new Column(\"counter\", sequenceNumberResponse(2, 12, 2)),\n    new Column (\"counter <= 10\",sequenceBooleanResponse(6)),\n    new Column (\"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 6\n            },\n            {\n                response: 12\n            },\n            {\n                response: 20\n            },\n            {\n                response: 30\n            },\n            {\n                response: 30\n            },\n        ]\n    )\n]\nexport const exerciseThreeTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" +\n    \"      output += counter\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\"\n    , 3\n)\n\nexport const exerciseFour = [\n    new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)),\n    new Column(\"index > 19 \", sequenceBooleanResponse(7)),\n    new Column(\n        \"response\",\n        [\n            {\n                response: 60\n            },\n            {\n                response: 113\n            },\n            {\n                response: 159\n            },\n            {\n                response: 198\n            },\n            {\n                response: 230\n            },\n            {\n                response: 255\n            },\n            {\n                response: 255\n            },\n        ]\n    )\n]\nexport const exerciseFourTitle = new Title (\n    \"let response = 0\\n\" +\n    \"for (let index = 60; index > 19; index -= 7) {\\n\" +\n    \"      response += index\\n\" +\n    \"}\\n\" +\n    \"console.log(response)\", 4\n)\n\nexport const exerciseFive = [\n    new Column(\n        \"churros\",\n        sequenceNumberResponse(1, 7)\n    ),\n    new Column(\n        \"console\",\n        [\n            {\n                response: \"nda\"\n            },\n            {\n                response: 2\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 4\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 6\n            },\n            {\n                response: \"nda\"\n            },\n        ]\n    ),\n    new Column(\n        \"churros < 7\",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n        ]\n    )\n]\nexport const exerciseFiveTitle = new Title (\n    \"for (let churros = 1; churros < 7; churros++) {\\n\" +\n    \"    if (churros % 2 === 0)\\n\" +\n    \"        console.log(churros)\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" , 5\n)\n\nexport const exerciseSix = [\n    new Column (\n        \"i\",\n        sequenceNumberResponse(0, 8)\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 3\n            },\n            {\n                response: 5\n            },\n            {\n                response: 6\n            },\n            {\n                response: 8\n            },\n            {\n                response: 9\n            },\n            {\n                response: 11\n            },\n            {\n                response: 12\n            },\n            {\n                response: 12\n            },\n        ]\n    ),\n    new Column(\n        \"i < 8\",\n\n    )\n]"]},"metadata":{},"sourceType":"module"}