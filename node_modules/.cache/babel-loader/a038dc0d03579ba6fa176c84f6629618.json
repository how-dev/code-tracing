{"ast":null,"code":"import { sequenceBooleanResponse, sequenceNumberResponse } from \"./auxFuncs\";\nimport { Column, Title } from \"./auxClasses\";\nexport const exerciseOne = [new Column(\"i\", sequenceNumberResponse(0, 5)), new Column(\"console\", sequenceNumberResponse(0, 5)), new Column(\"i < 5\", sequenceBooleanResponse(6))];\nexport const exerciseOneTitle = new Title(\"for (let i = 0; i < 5; i++) {\\n\" + \"      console.log(i)\\n\" + \"}\", 1, \"/\", 2);\nexport const exerciseTwo = [new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)), new Column(\"i > 0\", sequenceBooleanResponse(6))];\nexport const exerciseTwoTitle = new Title(\"for (let i = 5; i > 0; i--) {\\n\" + \"      console.log(i)\\n\" + \"}\", 2, 1, 3);\nexport const exerciseThree = [new Column(\"counter\", sequenceNumberResponse(2, 12, 2)), new Column(\"counter <= 10\", sequenceBooleanResponse(6)), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 6\n}, {\n  response: 12\n}, {\n  response: 20\n}, {\n  response: 30\n}, {\n  response: 30\n}])];\nexport const exerciseThreeTitle = new Title(\"let output = 0\\n\" + \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" + \"      output += counter\\n\" + \"}\\n\" + \"console.log(output)\", 3, 2, 4);\nexport const exerciseFour = [new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)), new Column(\"index > 19 \", sequenceBooleanResponse(7)), new Column(\"response\", [{\n  response: 60\n}, {\n  response: 113\n}, {\n  response: 159\n}, {\n  response: 198\n}, {\n  response: 230\n}, {\n  response: 255\n}, {\n  response: 255\n}])];\nexport const exerciseFourTitle = new Title(\"let response = 0\\n\" + \"for (let index = 60; index > 19; index -= 7) {\\n\" + \"      response += index\\n\" + \"}\\n\" + \"console.log(response)\", 4, 3, 5);\nexport const exerciseFive = [new Column(\"churros\", sequenceNumberResponse(1, 7)), new Column(\"console\", [{\n  response: \"-\"\n}, {\n  response: 2\n}, {\n  response: \"-\"\n}, {\n  response: 4\n}, {\n  response: \"-\"\n}, {\n  response: 6\n}, {\n  response: \"-\"\n}]), new Column(\"churros < 7\", sequenceBooleanResponse(7))];\nexport const exerciseFiveTitle = new Title(\"for (let churros = 1; churros < 7; churros++) {\\n\" + \"    if (churros % 2 === 0)\\n\" + \"        console.log(churros)\\n\" + \"    }\\n\" + \"}\\n\", 5, 4, 6);\nexport const exerciseSix = [new Column(\"i\", sequenceNumberResponse(0, 8)), new Column(\"i < 8\", sequenceBooleanResponse(9)), new Column(\"i % 2 === 0\", [{\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: true\n}]), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 5\n}, {\n  response: 6\n}, {\n  response: 8\n}, {\n  response: 9\n}, {\n  response: 11\n}, {\n  response: 12\n}, {\n  response: 12\n}])];\nexport const exerciseSixTitle = new Title(\"let output = 0\\n\" + \"for (let i = 0; i < 8; i++) {\\n\" + \"    if (i % 2 === 0)\\n\" + \"        output += 2\\n\" + \"    } else {\\n\" + \"        output += 1\\n\" + \"    }\\n\" + \"}\\n\" + \"console.log(output)\", 6, 5, 7);\nexport const exerciseSeven = [new Column(\"i\", sequenceNumberResponse(0, 4)), new Column(\"i <= arr.length\", sequenceBooleanResponse(5)), new Column(\"arr[i]\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: -98311\n}, {\n  response: \"undefined\"\n}, {\n  response: \"undefined\"\n}]), new Column(\"number\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: -98311\n}, {\n  response: \"undefined\"\n}, {\n  response: \"undefined\"\n}]), new Column(\"output\", [{\n  response: 10\n}, {\n  response: 15\n}, {\n  response: -98296\n}, {\n  response: \"NaN\"\n}, {\n  response: \"NaN\"\n}])];\nexport const exerciseSevenTitle = new Title(\"let output = 0\\n\" + \"let arr = [10, 5, -98311]\\n\" + \"for (let i = 0; i <= arr.length; i++) {\\n\" + \"    let number = arr[i]\\n\" + \"    output += number\\n\" + \"}\\n\" + \"console.log(output)\", 7, 6, 8);\nexport const exerciseEight = [new Column(\"i\", sequenceNumberResponse(0, 3)), new Column(\"i < arr.length\", sequenceBooleanResponse(4)), new Column(\"arr[i]\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: 0\n}, {\n  response: \"undefined\"\n}]), new Column(\"number\", [{\n  response: 10\n}, {\n  response: 5\n}, {\n  response: 0\n}, {\n  response: \"undefined\"\n}]), new Column(\"output\", [{\n  response: 13\n}, {\n  response: 104\n}, {\n  response: 312\n}, {\n  response: 312\n}])];\nexport const exerciseEightTitle = new Title(\"let output = 1\\n\" + \"let arr = [10, 5, 0]\\n\" + \"for (let i = 0; i < arr.length; i++) {\\n\" + \"    let number = arr[i]\\n\" + \"    output *= number + 3\\n\" + \"}\\n\" + \"console.log(output)\", 8, 7, 9);\nexport const exerciseNine = [new Column(\"batata\", sequenceNumberResponse(0, 3)), new Column(\"batata < arr.length\", sequenceBooleanResponse(4)), new Column(\"arr[batata]\", [{\n  response: -5\n}, {\n  response: -5\n}, {\n  response: -5\n}, {\n  response: \"undefined\"\n}]), new Column(\"number\", [{\n  response: 0\n}, {\n  response: 0\n}, {\n  response: 0\n}, {\n  response: \"undefined\"\n}]), new Column(\"cenoura\", [{\n  response: 100\n}, {\n  response: 10\n}, {\n  response: 1\n}, {\n  response: 1\n}])];\nexport const exerciseNineTitle = new Title(\"let cenoura = 1000\\n\" + \"let arr = [-5, -5, -5]\\n\" + \"for (let batata = 0; batata < arr.length; batata++) {\\n\" + \"    let number = arr[batata] + 5\\n\" + \"    cenoura /= number + 10\\n\" + \"}\\n\" + \"console.log(cenoura)\", 9, 8, 10);\nexport const exerciseTeen = [new Column(\"i\", sequenceNumberResponse(0, 3)), new Column(\"i < arrA.length\", sequenceBooleanResponse(4)), new Column(\"arrA[i]\", [{\n  response: 11\n}, {\n  response: 22\n}, {\n  response: 33\n}, {\n  response: \"undefined\"\n}]), new Column(\"numberA\", [{\n  response: 11\n}, {\n  response: 22\n}, {\n  response: 33\n}, {\n  response: \"undefined\"\n}]), new Column(\"arrB[i]\", [{\n  response: 33\n}, {\n  response: 22\n}, {\n  response: 10\n}, {\n  response: \"undefined\"\n}]), new Column(\"numberB\", [{\n  response: 33\n}, {\n  response: 22\n}, {\n  response: 10\n}, {\n  response: \"undefined\"\n}]), new Column(\"A + B % 2 === 1\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}, {\n  response: false\n}]), new Column(\"output\", [{\n  response: -132\n}, {\n  response: 5764\n}, {\n  response: -247895\n}, {\n  response: -247895\n}])];\nexport const exerciseTeenTitle = new Title(\"let output = 2\\n\" + \"let arrA = [11, 22, 33]\\n\" + \"let arrB = [33, 22, 10]\\n\" + \"for (let i = 0; i < arrA.length; i++) {\\n\" + \"    let A = arrA[i]\\n\" + \"    let B = arrB[i]\\n\" + \"    if (A + B % 2 === 1) {\\n\" + \"        output--\\n\" + \"        output *= A - B\\n\" + \"    } else {\\n\" + \"        output++\\n\" + \"        output *= A + B\\n\" + \"    }\\n\" + \"    output *= -1\\n\" + \"}\\n\" + \"console.log(output)\", 10, 9, 1);","map":{"version":3,"sources":["/home/howard/personal/teste-de-mesa/src/exercises/columns/columns.js"],"names":["sequenceBooleanResponse","sequenceNumberResponse","Column","Title","exerciseOne","exerciseOneTitle","exerciseTwo","exerciseTwoTitle","exerciseThree","response","exerciseThreeTitle","exerciseFour","exerciseFourTitle","exerciseFive","exerciseFiveTitle","exerciseSix","exerciseSixTitle","exerciseSeven","exerciseSevenTitle","exerciseEight","exerciseEightTitle","exerciseNine","exerciseNineTitle","exerciseTeen","exerciseTeenTitle"],"mappings":"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","sourcesContent":["import { sequenceBooleanResponse, sequenceNumberResponse } from \"./auxFuncs\";\nimport { Column, Title } from \"./auxClasses\";\n\nexport const exerciseOne = [\n    new Column(\"i\", sequenceNumberResponse(0, 5)),\n    new Column(\"console\", sequenceNumberResponse(0, 5)),\n    new Column(\"i < 5\", sequenceBooleanResponse(6)),\n]\nexport const exerciseOneTitle = new Title (\n    \"for (let i = 0; i < 5; i++) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\",\n    1,\n    \"/\",\n    2\n)\n\nexport const exerciseTwo = [\n    new Column(\"i\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"console\", sequenceNumberResponse(5, 0, 1, true)),\n    new Column(\"i > 0\", sequenceBooleanResponse(6))\n]\nexport const exerciseTwoTitle = new Title (\n    \"for (let i = 5; i > 0; i--) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\",\n    2,\n    1,\n    3\n)\n\nexport const exerciseThree = [\n    new Column(\"counter\", sequenceNumberResponse(2, 12, 2)),\n    new Column (\"counter <= 10\",sequenceBooleanResponse(6)),\n    new Column (\"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 6\n            },\n            {\n                response: 12\n            },\n            {\n                response: 20\n            },\n            {\n                response: 30\n            },\n            {\n                response: 30\n            },\n        ]\n    )\n]\nexport const exerciseThreeTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" +\n    \"      output += counter\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\"\n    ,\n    3,\n    2,\n    4\n)\n\nexport const exerciseFour = [\n    new Column(\"index\", sequenceNumberResponse(60, 15, 7, true)),\n    new Column(\"index > 19 \", sequenceBooleanResponse(7)),\n    new Column(\n        \"response\",\n        [\n            {\n                response: 60\n            },\n            {\n                response: 113\n            },\n            {\n                response: 159\n            },\n            {\n                response: 198\n            },\n            {\n                response: 230\n            },\n            {\n                response: 255\n            },\n            {\n                response: 255\n            },\n        ]\n    )\n]\nexport const exerciseFourTitle = new Title (\n    \"let response = 0\\n\" +\n    \"for (let index = 60; index > 19; index -= 7) {\\n\" +\n    \"      response += index\\n\" +\n    \"}\\n\" +\n    \"console.log(response)\",\n    4,\n    3,\n    5\n)\n\nexport const exerciseFive = [\n    new Column(\"churros\", sequenceNumberResponse(1, 7)),\n    new Column(\n        \"console\",\n        [\n            {\n                response: \"-\"\n            },\n            {\n                response: 2\n            },\n            {\n                response: \"-\"\n            },\n            {\n                response: 4\n            },\n            {\n                response: \"-\"\n            },\n            {\n                response: 6\n            },\n            {\n                response: \"-\"\n            },\n        ]\n    ),\n    new Column(\"churros < 7\", sequenceBooleanResponse(7))\n]\nexport const exerciseFiveTitle = new Title (\n    \"for (let churros = 1; churros < 7; churros++) {\\n\" +\n    \"    if (churros % 2 === 0)\\n\" +\n    \"        console.log(churros)\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" ,\n    5,\n    4,\n    6\n)\n\nexport const exerciseSix = [\n    new Column (\"i\", sequenceNumberResponse(0, 8)),\n    new Column(\"i < 8\", sequenceBooleanResponse(9)),\n    new Column(\n        \"i % 2 === 0\",\n        [\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: true\n            },\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 3\n            },\n            {\n                response: 5\n            },\n            {\n                response: 6\n            },\n            {\n                response: 8\n            },\n            {\n                response: 9\n            },\n            {\n                response: 11\n            },\n            {\n                response: 12\n            },\n            {\n                response: 12\n            },\n        ]\n    )\n]\nexport const exerciseSixTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let i = 0; i < 8; i++) {\\n\" +\n    \"    if (i % 2 === 0)\\n\" +\n    \"        output += 2\\n\" +\n    \"    } else {\\n\" +\n    \"        output += 1\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\",\n    6,\n    5,\n    7\n)\n\nexport const exerciseSeven = [\n    new Column(\"i\", sequenceNumberResponse(0, 4)),\n    new Column(\"i <= arr.length\", sequenceBooleanResponse(5)),\n    new Column(\n        \"arr[i]\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: -98311\n            },\n            {\n                response: \"undefined\"\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"number\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: -98311\n            },\n            {\n                response: \"undefined\"\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 15\n            },\n            {\n                response: -98296\n            },\n            {\n                response: \"NaN\"\n            },\n            {\n                response: \"NaN\"\n            }\n        ]\n    )\n]\n\nexport const exerciseSevenTitle = new Title (\n    \"let output = 0\\n\" +\n    \"let arr = [10, 5, -98311]\\n\" +\n    \"for (let i = 0; i <= arr.length; i++) {\\n\" +\n    \"    let number = arr[i]\\n\" +\n    \"    output += number\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\",\n    7,\n    6,\n    8\n)\n\nexport const exerciseEight = [\n    new Column(\"i\", sequenceNumberResponse(0, 3)),\n    new Column(\"i < arr.length\", sequenceBooleanResponse(4)),\n    new Column(\n        \"arr[i]\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: 0\n            },\n            {\n                response: \"undefined\"\n            }\n        ]\n    ),\n    new Column(\n        \"number\",\n        [\n            {\n                response: 10\n            },\n            {\n                response: 5\n            },\n            {\n                response: 0\n            },\n            {\n                response: \"undefined\"\n            }\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 13\n            },\n            {\n                response: 104\n            },\n            {\n                response: 312\n            },\n            {\n                response: 312\n            }\n        ]\n    )\n]\nexport const exerciseEightTitle = new Title(\n    \"let output = 1\\n\" +\n    \"let arr = [10, 5, 0]\\n\" +\n    \"for (let i = 0; i < arr.length; i++) {\\n\" +\n    \"    let number = arr[i]\\n\" +\n    \"    output *= number + 3\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\",\n    8,\n    7,\n    9\n)\n\nexport const exerciseNine = [\n    new Column(\"batata\", sequenceNumberResponse(0, 3)),\n    new Column(\"batata < arr.length\", sequenceBooleanResponse(4)),\n    new Column(\n        \"arr[batata]\",\n        [\n            {\n                response: -5\n            },\n            {\n                response: -5\n            },\n            {\n                response: -5\n            },\n            {\n                response: \"undefined\"\n            }\n        ]\n    ),\n    new Column(\n        \"number\",\n        [\n            {\n                response: 0\n            },\n            {\n                response: 0\n            },\n            {\n                response: 0\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"cenoura\",\n        [\n            {\n                response: 100\n            },\n            {\n                response: 10\n            },\n            {\n                response: 1\n            },\n            {\n                response: 1\n            }\n        ]\n    )\n]\nexport const exerciseNineTitle = new Title(\n    \"let cenoura = 1000\\n\" +\n    \"let arr = [-5, -5, -5]\\n\" +\n    \"for (let batata = 0; batata < arr.length; batata++) {\\n\" +\n    \"    let number = arr[batata] + 5\\n\" +\n    \"    cenoura /= number + 10\\n\" +\n    \"}\\n\" +\n    \"console.log(cenoura)\",\n    9,\n    8,\n    10\n)\n\nexport const exerciseTeen = [\n    new Column(\"i\", sequenceNumberResponse(0, 3)),\n    new Column(\"i < arrA.length\", sequenceBooleanResponse(4)),\n    new Column(\n        \"arrA[i]\",\n        [\n            {\n                response: 11\n            },\n            {\n                response: 22\n            },\n            {\n                response: 33\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"numberA\",\n        [\n            {\n                response: 11\n            },\n            {\n                response: 22\n            },\n            {\n                response: 33\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"arrB[i]\",\n        [\n            {\n                response: 33\n            },\n            {\n                response: 22\n            },\n            {\n                response: 10\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"numberB\",\n        [\n            {\n                response: 33\n            },\n            {\n                response: 22\n            },\n            {\n                response: 10\n            },\n            {\n                response: \"undefined\"\n            },\n        ]\n    ),\n    new Column(\n        \"A + B % 2 === 1\",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n            {\n                response: false\n            }\n        ]\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: -132\n            },\n            {\n                response: 5764\n            },\n            {\n                response: -247895\n            },\n            {\n                response: -247895\n            },\n        ]\n    )\n]\nexport const exerciseTeenTitle = new Title(\n    \"let output = 2\\n\" +\n    \"let arrA = [11, 22, 33]\\n\" +\n    \"let arrB = [33, 22, 10]\\n\" +\n    \"for (let i = 0; i < arrA.length; i++) {\\n\" +\n    \"    let A = arrA[i]\\n\" +\n    \"    let B = arrB[i]\\n\" +\n    \"    if (A + B % 2 === 1) {\\n\" +\n    \"        output--\\n\" +\n    \"        output *= A - B\\n\" +\n    \"    } else {\\n\" +\n    \"        output++\\n\" +\n    \"        output *= A + B\\n\" +\n    \"    }\\n\" +\n    \"    output *= -1\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\",\n    10,\n    9,\n    1\n)\n"]},"metadata":{},"sourceType":"module"}