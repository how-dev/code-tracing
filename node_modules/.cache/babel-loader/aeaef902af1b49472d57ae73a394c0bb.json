{"ast":null,"code":"class Column {\n  constructor(title, fields) {\n    this.title = title;\n    this.fields = fields;\n  }\n\n}\n\nclass Title {\n  constructor(code, number) {\n    this.code = code;\n    this.number = number;\n  }\n\n}\n\nconst sequenceResponse = (start, end, inc = 1, isDecreasing = false) => {\n  let output = [];\n\n  if (!isDecreasing) {\n    for (let i = start; i <= end; i += inc) {\n      output.push({\n        response: i\n      });\n    }\n\n    return output;\n  }\n\n  for (let i = start; i > end; i -= inc) {\n    output.push({\n      response: i\n    });\n  }\n\n  return output;\n};\n\nexport const exerciseOne = [new Column(\"i\", [{\n  response: 0\n}, {\n  response: 1\n}, {\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 4\n}, {\n  response: 5\n}]), new Column(\"console\", [{\n  response: 0\n}, {\n  response: 1\n}, {\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 4\n}, {\n  response: \"nda\"\n}]), new Column(\"condition\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}])];\nexport const exerciseOneTitle = new Title(\"for (let i = 0; i < 5; i++) {\\n\" + \"      console.log(i)\\n\" + \"}\", 1);\nexport const exerciseTwo = [new Column(\"i\", [{\n  response: 5\n}, {\n  response: 4\n}, {\n  response: 3\n}, {\n  response: 2\n}, {\n  response: 1\n}, {\n  response: 0\n}]), new Column(\"console\", [{\n  response: 5\n}, {\n  response: 4\n}, {\n  response: 3\n}, {\n  response: 2\n}, {\n  response: 1\n}, {\n  response: \"nda\"\n}]), new Column(\"i > 0\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}])];\nexport const exerciseTwoTitle = new Title(\"for (let i = 5; i > 0; i--) {\\n\" + \"      console.log(i)\\n\" + \"}\", 2);\nexport const exerciseThree = [new Column(\"counter\", [{\n  response: 2\n}, {\n  response: 4\n}, {\n  response: 6\n}, {\n  response: 8\n}, {\n  response: 10\n}, {\n  response: 12\n}]), new Column(\"counter <= 10\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}]), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 6\n}, {\n  response: 12\n}, {\n  response: 20\n}, {\n  response: 30\n}, {\n  response: 30\n}])];\nexport const exerciseThreeTitle = new Title(\"let output = 0\\n\" + \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" + \"      output += counter\\n\" + \"}\\n\" + \"console.log(output)\", 3);\nexport const exerciseFour = [new Column(\"index\", sequenceResponse(60, 15, 7, true)), new Column(\"index > 19 \", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}]), new Column(\"response\", [{\n  response: 60\n}, {\n  response: 113\n}, {\n  response: 159\n}, {\n  response: 198\n}, {\n  response: 230\n}, {\n  response: 255\n}, {\n  response: 255\n}])];\nexport const exerciseFourTitle = new Title(\"let response = 0\\n\" + \"for (let index = 60; index > 19; index -= 7) {\\n\" + \"      response += index\\n\" + \"}\\n\" + \"console.log(response)\", 4);\nexport const exerciseFive = [new Column(\"churros\", sequenceResponse(1, 7)), new Column(\"console\", [{\n  response: \"nda\"\n}, {\n  response: 2\n}, {\n  response: \"nda\"\n}, {\n  response: 4\n}, {\n  response: \"nda\"\n}, {\n  response: 6\n}, {\n  response: \"nda\"\n}]), new Column(\"churros < 7\", [{\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: true\n}, {\n  response: false\n}])];\nexport const exerciseFiveTitle = new Title(\"for (let churros = 1; churros < 7; churros++) {\\n\" + \"    if (churros % 2 === 0)\\n\" + \"        console.log(churros)\\n\" + \"    }\\n\" + \"}\\n\", 5);\nexport const exerciseSix = [new Column(\"i\", sequenceResponse(0, 8)), new Column(\"output\", [{\n  response: 2\n}, {\n  response: 3\n}, {\n  response: 5\n}, {\n  response: 6\n}, {\n  response: 8\n}, {\n  response: 9\n}, {\n  response: 11\n}, {\n  response: 12\n}, {\n  response: 12\n}]), new Column(\"\")];","map":{"version":3,"sources":["/home/howard/personal/teste-de-mesa/src/exercises/columns/columns.js"],"names":["Column","constructor","title","fields","Title","code","number","sequenceResponse","start","end","inc","isDecreasing","output","i","push","response","exerciseOne","exerciseOneTitle","exerciseTwo","exerciseTwoTitle","exerciseThree","exerciseThreeTitle","exerciseFour","exerciseFourTitle","exerciseFive","exerciseFiveTitle","exerciseSix"],"mappings":"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","sourcesContent":["class Column {\n    constructor(title, fields) {\n        this.title = title\n        this.fields = fields\n    }\n}\nclass Title {\n    constructor(code, number) {\n        this.code = code\n        this.number = number\n    }\n}\n\nconst sequenceResponse = (start, end, inc=1, isDecreasing=false) => {\n    let output = []\n    if (!isDecreasing) {\n        for (let i = start; i <= end; i += inc) {\n            output.push({\n                response: i\n            })\n        }\n        return output\n    }\n    for (let i = start; i > end; i -= inc) {\n        output.push({\n            response: i\n        })\n    }\n    return output\n}\n\nexport const exerciseOne = [\n    new Column(\"i\",\n        [\n            {\n                response: 0,\n            },\n            {\n                response: 1,\n            },\n            {\n                response: 2,\n            },\n            {\n                response: 3,\n            },\n            {\n                response: 4,\n            },\n            {\n                response: 5,\n            }\n        ]\n    ),\n    new Column(\"console\", [\n            {\n                response: 0,\n            },\n            {\n                response: 1,\n            },\n            {\n                response: 2,\n            },\n            {\n                response: 3,\n            },\n            {\n                response: 4,\n            },\n            {\n                response: \"nda\",\n            },\n        ]\n    ),\n    new Column(\"condition\", [\n            {\n                response: true,\n            },\n            {\n                response: true,\n            },\n            {\n                response: true,\n            },\n            {\n                response: true,\n            },\n            {\n                response: true,\n            },\n            {\n                response: false,\n            }\n        ]\n    ),\n]\nexport const exerciseOneTitle = new Title (\n    \"for (let i = 0; i < 5; i++) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 1\n)\n\nexport const exerciseTwo = [\n    new Column(\"i\",\n        [\n            {\n                response: 5\n            },\n            {\n                response: 4\n            },\n            {\n                response: 3\n            },\n            {\n                response: 2\n            },\n            {\n                response: 1\n            },\n            {\n                response: 0\n            }\n        ]\n    ),\n    new Column(\"console\",\n        [\n            {\n                response: 5\n            },\n            {\n                response: 4\n            },\n            {\n                response: 3\n            },\n            {\n                response: 2\n            },\n            {\n                response: 1\n            },\n            {\n                response: \"nda\"\n            }\n        ]\n    ),\n    new Column(\"i > 0\",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            }\n        ]\n    )\n]\nexport const exerciseTwoTitle = new Title (\n    \"for (let i = 5; i > 0; i--) {\\n\" +\n    \"      console.log(i)\\n\" +\n    \"}\", 2\n)\n\nexport const exerciseThree = [\n    new Column(\n        \"counter\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 4\n            },\n            {\n                response: 6\n            },\n            {\n                response: 8\n            },\n            {\n                response: 10\n            },\n            {\n                response: 12\n            },\n        ]\n    ),\n    new Column (\n        \"counter <= 10\",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n        ]\n    ),\n    new Column (\n        \"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 6\n            },\n            {\n                response: 12\n            },\n            {\n                response: 20\n            },\n            {\n                response: 30\n            },\n            {\n                response: 30\n            },\n        ]\n    )\n]\nexport const exerciseThreeTitle = new Title (\n    \"let output = 0\\n\" +\n    \"for (let counter = 2; counter <= 10; counter += 2) {\\n\" +\n    \"      output += counter\\n\" +\n    \"}\\n\" +\n    \"console.log(output)\"\n    , 3\n)\n\nexport const exerciseFour = [\n    new Column(\n        \"index\",\n        sequenceResponse(60, 15, 7, true)\n    ),\n    new Column(\n        \"index > 19 \",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n        ]\n    ),\n    new Column(\n        \"response\",\n        [\n            {\n                response: 60\n            },\n            {\n                response: 113\n            },\n            {\n                response: 159\n            },\n            {\n                response: 198\n            },\n            {\n                response: 230\n            },\n            {\n                response: 255\n            },\n            {\n                response: 255\n            },\n        ]\n    )\n]\nexport const exerciseFourTitle = new Title (\n    \"let response = 0\\n\" +\n    \"for (let index = 60; index > 19; index -= 7) {\\n\" +\n    \"      response += index\\n\" +\n    \"}\\n\" +\n    \"console.log(response)\", 4\n)\n\nexport const exerciseFive = [\n    new Column(\n        \"churros\",\n        sequenceResponse(1, 7)\n    ),\n    new Column(\n        \"console\",\n        [\n            {\n                response: \"nda\"\n            },\n            {\n                response: 2\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 4\n            },\n            {\n                response: \"nda\"\n            },\n            {\n                response: 6\n            },\n            {\n                response: \"nda\"\n            },\n        ]\n    ),\n    new Column(\n        \"churros < 7\",\n        [\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: true\n            },\n            {\n                response: false\n            },\n        ]\n    )\n]\nexport const exerciseFiveTitle = new Title (\n    \"for (let churros = 1; churros < 7; churros++) {\\n\" +\n    \"    if (churros % 2 === 0)\\n\" +\n    \"        console.log(churros)\\n\" +\n    \"    }\\n\" +\n    \"}\\n\" , 5\n)\n\nexport const exerciseSix = [\n    new Column (\n        \"i\",\n        sequenceResponse(0, 8)\n    ),\n    new Column(\n        \"output\",\n        [\n            {\n                response: 2\n            },\n            {\n                response: 3\n            },\n            {\n                response: 5\n            },\n            {\n                response: 6\n            },\n            {\n                response: 8\n            },\n            {\n                response: 9\n            },\n            {\n                response: 11\n            },\n            {\n                response: 12\n            },\n            {\n                response: 12\n            },\n        ]\n    ),\n    new Column(\n        \"\"\n    )\n]"]},"metadata":{},"sourceType":"module"}